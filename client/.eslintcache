[{"/Users/mohandodda/hackgt/virtual-checkin/client/src/index.tsx":"1","/Users/mohandodda/hackgt/virtual-checkin/client/src/App.tsx":"2","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/ScheduleTab.tsx":"3","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Home.tsx":"4","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Navbar.tsx":"5","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/InfoTab.tsx":"6","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/TracksTab.tsx":"7","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Footer.tsx":"8","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/PrizesTab.tsx":"9","/Users/mohandodda/hackgt/virtual-checkin/client/src/services/cmsService.ts":"10","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/HamburgerNavbar.tsx":"11","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Logo.tsx":"12","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/BlockCollection.tsx":"13","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Schedule.tsx":"14","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/EventInformation.tsx":"15","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/MainStage.tsx":"16","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/LiveEvents.tsx":"17","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/UpcomingEvents.tsx":"18","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/SeeFullScheduleButton.tsx":"19","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/AllEvents.tsx":"20","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Theme.tsx":"21","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/CardTag.tsx":"22","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/VideoInformation.tsx":"23","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/DailyStage.tsx":"24","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/InvalidEventStage.tsx":"25","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/YoutubeStage.tsx":"26","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/MainStageInformation.tsx":"27","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/MentorTab.tsx":"28","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/SponsorTab.tsx":"29"},{"size":603,"mtime":1629847525109,"results":"30","hashOfConfig":"31"},{"size":2293,"mtime":1634795666594,"results":"32","hashOfConfig":"31"},{"size":224,"mtime":1634843191592,"results":"33","hashOfConfig":"31"},{"size":4422,"mtime":1634839925933,"results":"34","hashOfConfig":"31"},{"size":2579,"mtime":1634795666595,"results":"35","hashOfConfig":"31"},{"size":834,"mtime":1631220667873,"results":"36","hashOfConfig":"31"},{"size":596,"mtime":1631220667873,"results":"37","hashOfConfig":"31"},{"size":1590,"mtime":1631220667873,"results":"38","hashOfConfig":"31"},{"size":1280,"mtime":1631220667873,"results":"39","hashOfConfig":"31"},{"size":4995,"mtime":1634843236879,"results":"40","hashOfConfig":"31"},{"size":2621,"mtime":1634800225894,"results":"41","hashOfConfig":"31"},{"size":934,"mtime":1630272563937,"results":"42","hashOfConfig":"31"},{"size":988,"mtime":1631220667872,"results":"43","hashOfConfig":"31"},{"size":3957,"mtime":1634797496092,"results":"44","hashOfConfig":"31"},{"size":397,"mtime":1631557647846,"results":"45","hashOfConfig":"31"},{"size":3591,"mtime":1634790995371,"results":"46","hashOfConfig":"31"},{"size":3269,"mtime":1634795666595,"results":"47","hashOfConfig":"31"},{"size":4174,"mtime":1634797507618,"results":"48","hashOfConfig":"31"},{"size":817,"mtime":1631220667873,"results":"49","hashOfConfig":"31"},{"size":8881,"mtime":1634797478049,"results":"50","hashOfConfig":"31"},{"size":223,"mtime":1630272563938,"results":"51","hashOfConfig":"31"},{"size":222,"mtime":1630272563937,"results":"52","hashOfConfig":"31"},{"size":340,"mtime":1633042307430,"results":"53","hashOfConfig":"31"},{"size":2090,"mtime":1633480649267,"results":"54","hashOfConfig":"31"},{"size":601,"mtime":1633042307430,"results":"55","hashOfConfig":"31"},{"size":826,"mtime":1634407443131,"results":"56","hashOfConfig":"31"},{"size":1075,"mtime":1631557647846,"results":"57","hashOfConfig":"31"},{"size":713,"mtime":1634843191592,"results":"58","hashOfConfig":"31"},{"size":716,"mtime":1634843191592,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1vt91iu",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mohandodda/hackgt/virtual-checkin/client/src/index.tsx",[],["125","126"],"/Users/mohandodda/hackgt/virtual-checkin/client/src/App.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/ScheduleTab.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Home.tsx",["127"],"import '../App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchLiveEvents, fetchUpcomingEvents } from '../services/cmsService';\n\nimport EventInformation from './EventInformation';\nimport MainStage from './MainStage';\nimport LiveEvents from './LiveEvents'\nimport Schedule from './Schedule'\nimport UpcomingEvents from './UpcomingEvents'\nimport SeeFullScheduleButton from './SeeFullScheduleButton'\nimport AllEvents from './AllEvents'\n\nconst Home: React.FC = () => {\n\n  let [mainStageEvent, setMainStageEvent] = useState<EventInformation>(new EventInformation(\"\", \"\", \"\", [], \"\"))\n\n  const updateMainStageEvent = (e: any) => {\n    setMainStageEvent(new EventInformation(e.id, e.url, e.name, e.tags, e.description))\n\n    window.scrollTo({\n      top: 0, \n      behavior: 'smooth'\n    });\n  }\n\n  useEffect(() => {\n    const getEvents = async () => {\n      const data = await fetchLiveEvents(true);\n      const allEvents = data.allEvents\n      \n      // Choose which event we want to show in the main stage first\n      // Youtube livestreams if they exist\n      console.log(allEvents)\n      for (let i = 0; i < allEvents.length; i++) {\n        if (allEvents[i].url !== null && (allEvents[i].url.includes(\"youtube\") || allEvents[i].url.includes(\"youtu.be\") ) ){\n          setMainStageEvent(new EventInformation(allEvents[i].id, allEvents[i].url, allEvents[i].name, allEvents[i].tags, allEvents[i].description))\n          return\n        }\n      }\n      \n      // Then any live event\n      if (allEvents.length > 0) {\n        setMainStageEvent(new EventInformation(allEvents[0].id, allEvents[0].url, allEvents[0].name, allEvents[0].tags, allEvents[0].description))\n        return\n      }\n\n      // Then the next upcoming event\n      const upcomingData = await fetchUpcomingEvents(true)\n      const allUpcomingEvents = upcomingData.allEvents\n      \n      for (let i = 0; i < allUpcomingEvents.length; i++) {\n        if (allUpcomingEvents[i].url !== null) {\n          setMainStageEvent(new EventInformation(allUpcomingEvents[i].id, allUpcomingEvents[i].url, allUpcomingEvents[i].name, allUpcomingEvents[i].tags, allUpcomingEvents[i].description))\n        }\n        return\n      } \n      \n      // If all else fails, a placeholder event\n      setMainStageEvent(new EventInformation(\"\",\"\", \"No Events are currently live!\", [], \"Check the schedule to see when the next event will go live!\"))\n     };\n     getEvents();\n     window.scrollTo(0, 0);\n   }, []);\n\n  // Logic for updating Upcoming and Live events\n  let [liveEvents, setLiveEvents] = useState<any[]>([])\n  let [upcomingEvents, setUpcomingEvents] = useState<any[]>([])\n\n  // The time to refresh next, use the next Upcoming Event to time this.\n  async function updateEvents() {\n    const upcomingEventDataRaw = await fetchUpcomingEvents(true);\n    const liveEventDataRaw = await fetchLiveEvents(true);\n\n    const upcomingEventData = upcomingEventDataRaw.allEvents\n    const liveEventData = liveEventDataRaw.allEvents \n\n    let minRefreshTime = new Date(Date.now() + 6000000)\n    for (let i = 0; i < upcomingEventData.length; i++) {\n      let event_start = new Date(upcomingEventData[i].startDate);\n      if (event_start < minRefreshTime) {\n        minRefreshTime = event_start\n      }\n    }\n    for (let i = 0; i < liveEventData.length; i++) {\n      let event_end = new Date(liveEventData[i].endDate);\n      if (event_end < minRefreshTime) {\n        minRefreshTime = event_end\n      }\n    }\n    setLiveEvents(liveEventData);\n\n    let sortedUpcomingEvents = upcomingEventData.sort(function(a: any, b: any) {\n      let dateA = a.startDate;\n      let dateB = b.startDate;\n      return dateA >= dateB ? 1 : -1;\n    })\n    setUpcomingEvents(sortedUpcomingEvents.splice(0, 9));\n\n    let nextRefreshTime = minRefreshTime.getTime() - Date.now()\n    if (nextRefreshTime > 0) {\n      setTimeout(updateEvents, nextRefreshTime);\n    } else {\n      setTimeout(updateEvents, 600000)\n    }\n  }\n\n  useEffect(()=>{\n    updateEvents();\n  }, [])\n\n  return (\n    <div>\n        <MainStage event={mainStageEvent} />\n        <LiveEvents setEventCallback={updateMainStageEvent} events={liveEvents} />\n        <Schedule tableLength={6} homepage={true} />\n        <SeeFullScheduleButton />\n        <UpcomingEvents setEventCallback={updateMainStageEvent} events={upcomingEvents} />\n        <AllEvents setEventCallback={updateMainStageEvent} />\n    </div>\n  )\n}\n\nexport default Home;\n","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Navbar.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/InfoTab.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/TracksTab.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Footer.tsx",["128","129","130","131","132"],"import '../App.css';\nimport React from 'react';\n\nimport Instagram from '../assets/social/insta.svg'\nimport Facebook from '../assets/social/facebook.svg'\nimport Twitter from '../assets/social/twitter.svg'\nimport GitHub from '../assets/social/github.svg'\nimport Web from '../assets/social/web.svg'\n\nconst Footer: React.FC = () => {\n\n  return (\n    <footer>\n      <div className=\"footer_container\">\n        <div className=\"footer_socials\">\n            <a href=\"https://www.instagram.com/thehexlabs/\" target=\"_blank\" className=\"footer_logo\">\n              <img src={Instagram} alt=\"Instagram logo\" />\n            </a>\n            <a href=\"https://www.facebook.com/TheHexLabs\" target=\"_blank\" className=\"footer_logo\">\n              <img src={Facebook} alt=\"Facebook logo\" />\n            </a>\n            <a href=\"https://www.twitter.com/TheHexLabs\" target=\"_blank\" className=\"footer_logo\">\n              <img src={Twitter} alt=\"Twitter logo\" />\n            </a>\n            <a href=\"https://www.github.com/HackGT\" target=\"_blank\" className=\"footer_logo\">\n              <img src={GitHub} alt=\"GitHub logo\" />\n            </a>\n            <a href=\"https://www.hexlabs.org\" target=\"_blank\" className=\"footer_logo\">\n              <img src={Web} alt=\"Web logo\" />\n            </a>\n        </div>\n        <div className=\"footer_text_hex\">\n          Made with ♡ by HexLabs\n        </div>\n        <div>\n          <a href=\"http://mlh.io/code-of-conduct\" className=\"footer_text_mlh\">\n            MLH Code of Conduct\n          </a>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;\n","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/PrizesTab.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/services/cmsService.ts",["133","134","135"],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/HamburgerNavbar.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Logo.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/BlockCollection.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Schedule.tsx",["136","137"],"import '../App.css';\nimport React, { useState, useEffect } from 'react';\nimport dateFormat from 'dateformat';\n \nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport custom_theme from './Theme'\n\nimport { fetchAllEvents, fetchUpcomingEvents } from '../services/cmsService';\n\ntype Props = {\n  tableLength: number;\n  homepage: boolean;\n};\n\nconst Schedule: React.FC<Props> = (props: Props) => {\n\n  let [events, setEvents] = useState<any[]>([])\n\n  useEffect(() => {\n    const getEvents = async () => {\n      let data;\n       if (props.homepage) {\n        data = await fetchUpcomingEvents(false);\n      } else {\n        data = await fetchAllEvents(false);\n      }\n       let sortedData = data.allEvents.sort(function(a: any, b: any) {\n         let dateA = a.startDate;\n         let dateB = b.startDate;\n         return dateA >= dateB ? 1 : -1;\n       })\n       setEvents(sortedData.slice(0, props.tableLength));\n     };\n     getEvents();\n   }, []);\n\n  const formateDateString = (date: string) => {\n    return dateFormat(date, \"h:MM TT Z\")\n  }\n\n  const getDayFromDate = (date: string) => {\n    return dateFormat(date, \"mmm dS\")\n  }\n\n  const StyledTableCell = withStyles((theme: Theme) =>\n    createStyles({\n      head: {\n        backgroundColor: custom_theme.palette.primary.main,\n        color: theme.palette.common.white\n      },\n      body: {\n        fontSize: 14,\n      },\n    }),\n  )(TableCell);\n\n  return (\n    <div className=\"schedule\">\n      <p className=\"schedule_title\">Schedule</p>\n      <TableContainer className=\"schedule_table\" component={Paper} style={{ maxHeight: 600 }}>\n        <Table stickyHeader aria-label=\"simple table\" style={{\n          tableLayout: \"fixed\",\n          minWidth: \"1100px\", overflow: \"auto\"\n        }}>\n          <colgroup>\n              <col width=\"15%\" />\n              <col width=\"40%\" />\n              <col width=\"8\" />\n              <col width=\"10%\" />\n              <col width=\"8%\" />\n              <col width=\"7%\" />\n              <col width=\"7%\" />\n          </colgroup>\n          <TableHead>\n            <TableRow>\n              <StyledTableCell align=\"left\">Name</StyledTableCell>\n              <StyledTableCell align=\"left\">Description</StyledTableCell>\n              <StyledTableCell align=\"left\">Link</StyledTableCell>\n              <StyledTableCell align=\"left\">Location</StyledTableCell>\n              <StyledTableCell align=\"left\">Date</StyledTableCell>\n              <StyledTableCell align=\"left\">Start Time</StyledTableCell>\n              <StyledTableCell align=\"left\">End Time</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {events.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                <TableCell align=\"left\">{row.description}</TableCell>\n                <TableCell align=\"left\">\n                  <a href={row.url} target=\"_blank\">{row.url ? (\"Join Here!\"):(\"\")}</a>\n                </TableCell>\n                <TableCell style={{width: 'max-content'}} align=\"left\">{row.location.map((x: any) => x.name).join(\", \")}</TableCell>\n                <TableCell style={{width: 'max-content'}} align=\"left\">{getDayFromDate(row.startDate)}</TableCell>\n                <TableCell align=\"left\">{formateDateString(row.startDate)}</TableCell>\n                <TableCell align=\"left\">{formateDateString(row.endDate)}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default Schedule;\n","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/EventInformation.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/MainStage.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/LiveEvents.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/UpcomingEvents.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/SeeFullScheduleButton.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/AllEvents.tsx",["138","139"],"import '../App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport custom_theme from './Theme'\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport CardTag from './CardTag'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MediaQuery from \"react-responsive\";\n\nimport { fetchAllEvents } from '../services/cmsService';\n\nimport placeholder_img from '../assets/blue_wide.png'\n\ntype Props = {\n  setEventCallback: any;\n};\n\nconst AllEvents: React.FC<Props> = (props: Props) => {\n\n  let [events, setEvents] = useState<any[]>([])\n  const [tagFilter, setTagFilter] = useState(\"None\")\n  const [locationFilter, setLocationFilter] = useState(\"None\")\n  const [tagFilters, setTagFilters] = useState(new Set());\n  const [locationFilters, setLocationFilters] = useState(new Set());\n  const [filtered_events, set_filtered_events] = useState<any[]>([])\n\n  useEffect(() => {\n\n    const getEvents = async () => {\n      const data = await fetchAllEvents(false)\n      const events = data.allEvents\n      setEvents(events);\n      set_filtered_events(events.slice(0, 6))\n\n      // Update possible tag filters\n      if (tagFilters.size === 0) {\n        let tag_filter_set = new Set([\"None\"])\n        for (let i = 0; i < events.length; i++) {\n          for (let j = 0; j < events[i].tags.length; j++) {\n            tag_filter_set.add(events[i].tags[j].name)\n          }\n        }\n        setTagFilters(tag_filter_set)\n      }\n\n      // Update possible location filters\n      if (locationFilters.size === 0) {\n        let location_filter_set = new Set([\"None\"])\n        for (let i = 0; i < events.length; i++) {\n          for (let j = 0; j < events[i].location.length; j++) {\n            location_filter_set.add(events[i].location[j].name)\n          }\n        }\n        setLocationFilters(location_filter_set)\n      }\n\n    };\n    getEvents();\n  }, []);\n\n  const handleTagFilterChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setTagFilter(event.target.value as string)\n  };\n\n  const handleEventFilterChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLocationFilter(event.target.value as string)\n  };\n\n  // This function is called when the filter button is clicked\n  // It should return a list of events that have the tags specified by the filters! \n  // If there are both filters, we show events have have the tag filter OR the location filter.\n  const handle_filter_button = () => {\n    if (tagFilter === \"None\" && locationFilter === \"None\") {\n      set_filtered_events(events.slice(0, 6))\n    } else {\n      let location_filtered_set = new Set()\n      let tag_filtered_set = new Set()\n\n      // Loop through each event\n      for (let i = 0; i < events.length; i++) {\n        if (locationFilter !== \"None\") {\n          // If there is a location filter and no tag filter\n          for (let j = 0; j < events[i]['location'].length; j++) {\n            if (events[i].location[j].hasOwnProperty(\"name\") && events[i].location[j].name === locationFilter) {\n              location_filtered_set.add(events[i])\n              break;\n            }\n          }\n        } else {\n          location_filtered_set.add(events[i])\n        }\n        if (tagFilter !== \"None\") {\n          // If there is a tag filter but no location filter\n          for (let j = 0; j < events[i]['tags'].length; j++) {\n            if (events[i]['tags'][j]['name'] === tagFilter) {\n              tag_filtered_set.add(events[i])\n              break;\n            }\n          }\n        } else {\n          tag_filtered_set.add(events[i])\n        }\n      }\n\n      let location_filtered_list = Array.from(location_filtered_set)\n      let filtered_list = new Array()\n      for (let k = 0; k < location_filtered_list.length; k++) {\n        if (tag_filtered_set.has(location_filtered_list[k])) {\n          filtered_list.push(location_filtered_list[k])\n        }\n      }\n      set_filtered_events(filtered_list)\n    }\n  }\n\n  const StyledButton = withStyles({\n    root: {\n      background: custom_theme.palette.primary.main,\n      borderRadius: 5,\n      border: 0,\n      color: 'white',\n      height: 48,\n      fontSize: 16,\n      padding: '0 30px',\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      marginTop: '20px'\n    },\n    label: {\n      textTransform: 'capitalize',\n    },\n  })(Button);\n\n  return (\n    <div className=\"all_events\">\n      <p className=\"all_events_title\">All Events</p>\n      <div className=\"all_events_filter_container\">\n        <p className=\"all_events_filter_text\">Filter by: </p>\n        <FormControl className=\"all_events_filter_dropdown\">\n          <InputLabel id=\"tag-select-input\">Tag</InputLabel>\n          <Select\n            labelId=\"tag-select-label\"\n            id=\"tag-select-id\"\n            value={tagFilter}\n            onChange={handleTagFilterChange}\n          >\n            {\n              Array.from(tagFilters).map(function(obj: any) { \n                return <MenuItem value={obj}>{obj}</MenuItem>\n              })\n            }\n          </Select>\n        </FormControl>\n        <FormControl className=\"all_events_filter_dropdown\">\n          <InputLabel id=\"event-select-label\">Location</InputLabel>\n          <Select\n            labelId=\"event-select-label\"\n            id=\"event-select-id\"\n            value={locationFilter}\n            onChange={handleEventFilterChange}\n          >\n            {\n              Array.from(locationFilters).map(function(obj: any) { \n                return <MenuItem value={obj}>{obj}</MenuItem>\n              })\n            }\n          </Select>\n        </FormControl>\n        <StyledButton variant=\"contained\" onClick={handle_filter_button} color=\"primary\">Filter</StyledButton>\n      </div>\n      <div className=\"all_events_container\">\n        <MediaQuery minWidth={900}>\n          {\n            filtered_events.map((event) => (\n              <div className=\"all_events_card\">\n                <CardMedia\n                  component='img'\n                  image={placeholder_img}\n                  style={{\n                    borderTopLeftRadius: '1.5%',\n                    borderTopRightRadius: '1.5%',\n                    height: '100px',\n                  }}\n                />\n                <Card>\n                  <CardActionArea onClick={() => props.setEventCallback(event)}>\n                    <CardContent>\n                      <Typography align='left' gutterBottom variant=\"h5\" component=\"h2\">\n                        {event.name}\n                      </Typography>\n                      <Typography align='left' variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {event.description}\n                      </Typography>\n                      <CardActions>\n                        {\n                          event.tags.map((tag: any, index: number) => (\n                            <CardTag key={index} tag={tag.name}/>\n                          ))\n                        }\n                      </CardActions>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </div>\n            ))\n          }\n        </MediaQuery>\n        <MediaQuery maxWidth={900}>\n          {\n            filtered_events.map((event) => (\n              <div className=\"all_events_card\">\n                <Card>\n                  <CardActionArea onClick={() => props.setEventCallback(event)}>\n                    <CardContent>\n                      <Typography align='left' gutterBottom variant=\"h5\" component=\"h2\">\n                        {event.name}\n                      </Typography>\n                      <Typography align='left' variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {event.description}\n                      </Typography>\n                      <CardActions>\n                        {\n                          event.tags.map((tag: any, index: number) => (\n                            <CardTag key={index} tag={tag.name}/>\n                          ))\n                        }\n                      </CardActions>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </div>\n            ))\n          }\n        </MediaQuery>\n      </div>\n      <StyledButton variant=\"contained\" href=\"/schedule\" color=\"primary\">Check Full Schedule</StyledButton>\n    </div>\n  )\n}\n\nexport default AllEvents;","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/Theme.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/CardTag.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/VideoInformation.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/DailyStage.tsx",["140"],"import '../App.css';\n\nimport React, { useEffect, useRef } from 'react';\n\nimport DailyIframe from '@daily-co/daily-js';\nimport MainStageInformation from './MainStageInformation'\nimport EventInformation from './EventInformation';\n\ntype Props = {\n  videoID: string;\n  event: EventInformation;\n};\n\nconst DailyStage: React.FC<Props> = (props: Props) => {\n  let url = props.videoID.split(\"?t=\")[0]\n  let token = props.videoID.split(\"?t=\")[1]\n\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  async function createCallFrameAndJoinCall() {\n    if (containerRef.current !== null) {\n      const divElement = containerRef.current;\n      if (divElement !== null) {\n        const callFrame = DailyIframe.createFrame(divElement, {\n          showLeaveButton: true,\n          showFullscreenButton: true,\n          theme: {\n            colors: {\n              accent: '#286DA8',\n              accentText: '#FFFFFF',\n              background: '#FFFFFF',\n              backgroundAccent: '#FBFCFD',\n              baseText: '#000000',\n              border: '#EBEFF4',\n              mainAreaBg: '#000000',\n              mainAreaBgAccent: '#333333',\n              mainAreaText: '#FFFFFF',\n              supportiveText: '#808080',\n            }\n          }\n        });\n        await callFrame.join({\n          url: url,\n          token: token\n        });\n        callFrame.on('left-meeting', (_) => {\n          if (containerRef != null) {\n            if (containerRef.current != null) {\n              containerRef.current.innerHTML = \"\";\n            }\n          }\n          createCallFrameAndJoinCall()\n        })\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (containerRef != null) {\n      if (containerRef.current != null) {\n        containerRef.current.innerHTML = \"\";\n      }\n    }\n    createCallFrameAndJoinCall()\n  }, [props.videoID]);\n\n  return (\n    <div className=\"main_stage_container\">\n      <div className=\"main_stage_wrapper\">\n        <div className=\"dailyStage\" ref={containerRef} />\n      </div>\n      <MainStageInformation event={props.event} />\n    </div>\n  );\n}\n\nexport default DailyStage;\n","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/InvalidEventStage.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/YoutubeStage.tsx",["141"],"import '../App.css';\n\nimport YouTube from \"react-youtube\";\nimport MainStageInformation from './MainStageInformation'\nimport EventInformation from './EventInformation';\n\ntype Props = {\n  videoID: string;\n  event: EventInformation;\n};\n\nconst YoutubeStage: React.FC<Props> = (props: Props) => {\n\n  return (\n    <div className=\"main_stage_container\">\n      <div className=\"main_stage_wrapper_youtube\">\n        <YouTube\n          videoId={props.videoID}\n          opts={{ playerVars: { autoplay: 1 } }}\n          className=\"youtubeStage\"\n        />\n        <iframe className=\"youtubechat\" height=\"100%\" src={\"https://www.youtube.com/live_chat?v=\" + props.videoID + \"&embed_domain=\" + window.location.hostname}></iframe>\n      </div>\n      <MainStageInformation event={props.event} />\n    </div>\n  )\n}\n\nexport default YoutubeStage;\n","/Users/mohandodda/hackgt/virtual-checkin/client/src/components/MainStageInformation.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/MentorTab.tsx",[],"/Users/mohandodda/hackgt/virtual-checkin/client/src/components/SponsorTab.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":110,"column":6,"nodeType":"148","endLine":110,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":16,"column":13,"nodeType":"152","endLine":16,"endColumn":101},{"ruleId":"150","severity":1,"message":"151","line":19,"column":13,"nodeType":"152","endLine":19,"endColumn":99},{"ruleId":"150","severity":1,"message":"151","line":22,"column":13,"nodeType":"152","endLine":22,"endColumn":98},{"ruleId":"150","severity":1,"message":"151","line":25,"column":13,"nodeType":"152","endLine":25,"endColumn":93},{"ruleId":"150","severity":1,"message":"151","line":28,"column":13,"nodeType":"152","endLine":28,"endColumn":87},{"ruleId":"153","severity":1,"message":"154","line":58,"column":9,"nodeType":"155","messageId":"156","endLine":58,"endColumn":24},{"ruleId":"153","severity":1,"message":"157","line":134,"column":9,"nodeType":"155","messageId":"156","endLine":134,"endColumn":28},{"ruleId":"153","severity":1,"message":"158","line":200,"column":9,"nodeType":"155","messageId":"156","endLine":200,"endColumn":23},{"ruleId":"146","severity":1,"message":"159","line":43,"column":7,"nodeType":"148","endLine":43,"endColumn":9,"suggestions":"160"},{"ruleId":"150","severity":1,"message":"151","line":99,"column":19,"nodeType":"152","endLine":99,"endColumn":53},{"ruleId":"146","severity":1,"message":"161","line":69,"column":6,"nodeType":"148","endLine":69,"endColumn":8,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":116,"column":27,"nodeType":"165","messageId":"166","endLine":116,"endColumn":38,"fix":"167"},{"ruleId":"146","severity":1,"message":"168","line":65,"column":6,"nodeType":"148","endLine":65,"endColumn":21,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":22,"column":9,"nodeType":"152","endLine":22,"endColumn":162},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateEvents'. Either include it or remove the dependency array.","ArrayExpression",["174"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","@typescript-eslint/no-redeclare","'liveEventsQuery' is already defined.","Identifier","redeclared","'upcomingEventsQuery' is already defined.","'allEventsQuery' is already defined.","React Hook useEffect has missing dependencies: 'props.homepage' and 'props.tableLength'. Either include them or remove the dependency array. If 'setEvents' needs the current value of 'props.tableLength', you can also switch to useReducer instead of useState and read 'props.tableLength' in the reducer.",["175"],"React Hook useEffect has missing dependencies: 'locationFilters.size' and 'tagFilters.size'. Either include them or remove the dependency array.",["176"],"@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"177","text":"178"},"React Hook useEffect has a missing dependency: 'createCallFrameAndJoinCall'. Either include it or remove the dependency array.",["179"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},[4182,4193],"[]",{"desc":"186","fix":"187"},"Update the dependencies array to be: [updateEvents]",{"range":"188","text":"189"},"Update the dependencies array to be: [props.homepage, props.tableLength]",{"range":"190","text":"191"},"Update the dependencies array to be: [locationFilters.size, tagFilters.size]",{"range":"192","text":"193"},"Update the dependencies array to be: [createCallFrameAndJoinCall, props.videoID]",{"range":"194","text":"195"},[3989,3991],"[updateEvents]",[1331,1333],"[props.homepage, props.tableLength]",[2385,2387],"[locationFilters.size, tagFilters.size]",[1806,1821],"[createCallFrameAndJoinCall, props.videoID]"]