[{"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\index.tsx":"1","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\App.tsx":"2","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\services\\cmsService.ts":"3","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Navbar.tsx":"4","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Logo.tsx":"5","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\MainStage.tsx":"6","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\CardTag.tsx":"7","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Home.tsx":"8","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\LiveEvents.tsx":"9","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Schedule.tsx":"10","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\UpcomingEvents.tsx":"11","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\AllEvents.tsx":"12","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Theme.tsx":"13","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\EventInformation.tsx":"14","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\ScheduleTab.tsx":"15","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\InfoTab.tsx":"16","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\SeeFullScheduleButton.tsx":"17","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\BlockCollection.tsx":"18","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\TracksTab.tsx":"19","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\PrizesTab.tsx":"20","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Footer.tsx":"21","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\MainStageInformation.tsx":"22","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\YoutubeStage.tsx":"23","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\DailyStage.tsx":"24","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\InvalidEventStage.tsx":"25","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\VideoInformation.tsx":"26","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\HamburgerNavbar.tsx":"27"},{"size":623,"mtime":1631989768040,"results":"28","hashOfConfig":"29"},{"size":1884,"mtime":1634223904275,"results":"30","hashOfConfig":"29"},{"size":3121,"mtime":1634408482306,"results":"31","hashOfConfig":"29"},{"size":2350,"mtime":1634223904291,"results":"32","hashOfConfig":"29"},{"size":954,"mtime":1634223904289,"results":"33","hashOfConfig":"29"},{"size":4477,"mtime":1634414694586,"results":"34","hashOfConfig":"29"},{"size":237,"mtime":1634223904283,"results":"35","hashOfConfig":"29"},{"size":4280,"mtime":1634414706726,"results":"36","hashOfConfig":"29"},{"size":2076,"mtime":1634409300442,"results":"37","hashOfConfig":"29"},{"size":3686,"mtime":1634223904292,"results":"38","hashOfConfig":"29"},{"size":2872,"mtime":1634408482305,"results":"39","hashOfConfig":"29"},{"size":7848,"mtime":1634408987027,"results":"40","hashOfConfig":"29"},{"size":236,"mtime":1634223904294,"results":"41","hashOfConfig":"29"},{"size":413,"mtime":1634223904284,"results":"42","hashOfConfig":"29"},{"size":215,"mtime":1634223904293,"results":"43","hashOfConfig":"29"},{"size":867,"mtime":1634223904287,"results":"44","hashOfConfig":"29"},{"size":851,"mtime":1634223904293,"results":"45","hashOfConfig":"29"},{"size":1028,"mtime":1634223904282,"results":"46","hashOfConfig":"29"},{"size":624,"mtime":1634223904294,"results":"47","hashOfConfig":"29"},{"size":1323,"mtime":1634223904292,"results":"48","hashOfConfig":"29"},{"size":1635,"mtime":1634223904285,"results":"49","hashOfConfig":"29"},{"size":1111,"mtime":1634223904290,"results":"50","hashOfConfig":"29"},{"size":881,"mtime":1634409994899,"results":"51","hashOfConfig":"29"},{"size":2167,"mtime":1634223904284,"results":"52","hashOfConfig":"29"},{"size":625,"mtime":1634223904288,"results":"53","hashOfConfig":"29"},{"size":355,"mtime":1634223904296,"results":"54","hashOfConfig":"29"},{"size":2397,"mtime":1634223904286,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"2hcxpv",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\index.tsx",[],["116","117"],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\App.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\services\\cmsService.ts",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Navbar.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Logo.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\MainStage.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\CardTag.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Home.tsx",["118"],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\LiveEvents.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Schedule.tsx",["119","120"],"import '../App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport dateFormat from 'dateformat';\r\n \r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport custom_theme from './Theme'\r\n\r\nimport { fetchAllEvents } from '../services/cmsService';\r\n\r\ntype Props = {\r\n  tableLength: number;\r\n};\r\n\r\nconst Schedule: React.FC<Props> = (props: Props) => {\r\n\r\n  let [events, setEvents] = useState<any[]>([])\r\n\r\n  useEffect(() => {\r\n    const getEvents = async () => {\r\n       const data = await fetchAllEvents();\r\n       let sortedData = data.allEvents.sort(function(a: any, b: any) {\r\n         let dateA = a.startDate;\r\n         let dateB = b.startDate;\r\n         return dateA >= dateB ? 1 : -1;\r\n       })\r\n       setEvents(sortedData.slice(0, props.tableLength));\r\n     };\r\n     getEvents();\r\n   }, []);\r\n\r\n  const formateDateString = (date: string) => {\r\n    return dateFormat(date, \"h:MM TT Z\")\r\n  }\r\n\r\n  const getDayFromDate = (date: string) => {\r\n    return dateFormat(date, \"mmm dS\")\r\n  }\r\n\r\n  const StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n      head: {\r\n        backgroundColor: custom_theme.palette.primary.main,\r\n        color: theme.palette.common.white\r\n      },\r\n      body: {\r\n        fontSize: 14,\r\n      },\r\n    }),\r\n  )(TableCell);\r\n\r\n  return (\r\n    <div className=\"schedule\">\r\n      <p className=\"schedule_title\">Schedule</p>\r\n      <TableContainer className=\"schedule_table\" component={Paper} style={{ maxHeight: 600 }}>\r\n        <Table stickyHeader aria-label=\"simple table\" style={{\r\n          tableLayout: \"fixed\",\r\n          minWidth: \"1100px\", overflow: \"auto\"\r\n        }}>\r\n          <colgroup>\r\n              <col width=\"15%\" />\r\n              <col width=\"50%\" />\r\n              <col width=\"8%\" />\r\n              <col width=\"7%\" />\r\n              <col width=\"10%\" />\r\n              <col width=\"10%\" />\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">Event Name</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Event Description</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Event Link</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Date</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Start Time</StyledTableCell>\r\n              <StyledTableCell align=\"left\">End Time</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {events.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                <TableCell align=\"left\">{row.description}</TableCell>\r\n                <TableCell align=\"left\">\r\n                  <a href={row.url} target=\"_blank\">{row.url ? (\"Join Here!\"):(\"\")}</a>\r\n                </TableCell>\r\n                <TableCell style={{width: 'max-content'}} align=\"left\">{getDayFromDate(row.startDate)}</TableCell>\r\n                <TableCell align=\"left\">{formateDateString(row.startDate)}</TableCell>\r\n                <TableCell align=\"left\">{formateDateString(row.endDate)}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Schedule;\r\n","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\UpcomingEvents.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\AllEvents.tsx",["121","122"],"import '../App.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport custom_theme from './Theme'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardTag from './CardTag'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { fetchAllEvents } from '../services/cmsService';\r\n\r\nimport placeholder_img from '../assets/blue_wide.png'\r\n\r\ntype Props = {\r\n  setEventCallback: any;\r\n};\r\n\r\nconst AllEvents: React.FC<Props> = (props: Props) => {\r\n\r\n  let [events, setEvents] = useState<any[]>([])\r\n  const [tagFilter, setTagFilter] = useState(\"None\")\r\n  const [locationFilter, setLocationFilter] = useState(\"None\")\r\n  const [tagFilters, setTagFilters] = useState(new Set());\r\n  const [locationFilters, setLocationFilters] = useState(new Set());\r\n  const [filtered_events, set_filtered_events] = useState<any[]>([])\r\n\r\n  useEffect(() => {\r\n\r\n    const getEvents = async () => {\r\n      const data = await fetchAllEvents()\r\n      const events = data.allEvents\r\n      setEvents(events);\r\n      set_filtered_events(events.slice(0, 6))\r\n\r\n      // Update possible tag filters\r\n      if (tagFilters.size === 0) {\r\n        let tag_filter_set = new Set([\"None\"])\r\n        for (let i = 0; i < events.length; i++) {\r\n          for (let j = 0; j < events[i].tags.length; j++) {\r\n            tag_filter_set.add(events[i].tags[j].name)\r\n          }\r\n        }\r\n        setTagFilters(tag_filter_set)\r\n      }\r\n\r\n      // Update possible location filters\r\n      if (locationFilters.size === 0) {\r\n        let location_filter_set = new Set([\"None\"])\r\n        for (let i = 0; i < events.length; i++) {\r\n          for (let j = 0; j < events[i].location.length; j++) {\r\n            location_filter_set.add(events[i].location[j].name)\r\n          }\r\n        }\r\n        setLocationFilters(location_filter_set)\r\n      }\r\n\r\n    };\r\n    getEvents();\r\n  }, []);\r\n\r\n  const handleTagFilterChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setTagFilter(event.target.value as string)\r\n  };\r\n\r\n  const handleEventFilterChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setLocationFilter(event.target.value as string)\r\n  };\r\n\r\n  // This function is called when the filter button is clicked\r\n  // It should return a list of events that have the tags specified by the filters! \r\n  // If there are both filters, we show events have have the tag filter OR the location filter.\r\n  const handle_filter_button = () => {\r\n    if (tagFilter === \"None\" && locationFilter === \"None\") {\r\n      set_filtered_events(events.slice(0, 6))\r\n    } else {\r\n      let location_filtered_set = new Set()\r\n      let tag_filtered_set = new Set()\r\n\r\n      // Loop through each event\r\n      for (let i = 0; i < events.length; i++) {\r\n        if (locationFilter !== \"None\") {\r\n          // If there is a location filter and no tag filter\r\n          for (let j = 0; j < events[i]['location'].length; j++) {\r\n            if (events[i].location[j].hasOwnProperty(\"name\") && events[i].location[j].name === locationFilter) {\r\n              location_filtered_set.add(events[i])\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          location_filtered_set.add(events[i])\r\n        }\r\n        if (tagFilter !== \"None\") {\r\n          // If there is a tag filter but no location filter\r\n          for (let j = 0; j < events[i]['tags'].length; j++) {\r\n            if (events[i]['tags'][j]['name'] === tagFilter) {\r\n              tag_filtered_set.add(events[i])\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          tag_filtered_set.add(events[i])\r\n        }\r\n      }\r\n\r\n      let location_filtered_list = Array.from(location_filtered_set)\r\n      let filtered_list = new Array()\r\n      for (let k = 0; k < location_filtered_list.length; k++) {\r\n        if (tag_filtered_set.has(location_filtered_list[k])) {\r\n          filtered_list.push(location_filtered_list[k])\r\n        }\r\n      }\r\n      set_filtered_events(filtered_list)\r\n    }\r\n  }\r\n\r\n  const StyledButton = withStyles({\r\n    root: {\r\n      background: custom_theme.palette.primary.main,\r\n      borderRadius: 5,\r\n      border: 0,\r\n      color: 'white',\r\n      height: 48,\r\n      fontSize: 16,\r\n      padding: '0 30px',\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      marginTop: '15px'\r\n    },\r\n    label: {\r\n      textTransform: 'capitalize',\r\n    },\r\n  })(Button);\r\n\r\n  return (\r\n    <div className=\"all_events\">\r\n      <p className=\"all_events_title\">All Events</p>\r\n      <div className=\"all_events_filter_container\">\r\n        <p className=\"all_events_filter_text\">Filter by: </p>\r\n        <FormControl className=\"all_events_filter_dropdown\">\r\n          <InputLabel id=\"tag-select-input\">Tag</InputLabel>\r\n          <Select\r\n            labelId=\"tag-select-label\"\r\n            id=\"tag-select-id\"\r\n            value={tagFilter}\r\n            onChange={handleTagFilterChange}\r\n          >\r\n            {\r\n              Array.from(tagFilters).map(function(obj: any) { \r\n                return <MenuItem value={obj}>{obj}</MenuItem>\r\n              })\r\n            }\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className=\"all_events_filter_dropdown\">\r\n          <InputLabel id=\"event-select-label\">Location</InputLabel>\r\n          <Select\r\n            labelId=\"event-select-label\"\r\n            id=\"event-select-id\"\r\n            value={locationFilter}\r\n            onChange={handleEventFilterChange}\r\n          >\r\n            {\r\n              Array.from(locationFilters).map(function(obj: any) { \r\n                return <MenuItem value={obj}>{obj}</MenuItem>\r\n              })\r\n            }\r\n          </Select>\r\n        </FormControl>\r\n        <StyledButton variant=\"contained\" onClick={handle_filter_button} color=\"primary\">Filter</StyledButton>\r\n      </div>\r\n      <div className=\"all_events_container\">\r\n        {\r\n          filtered_events.map((event) => (\r\n            <div className=\"all_events_card\">\r\n              <CardMedia\r\n                component='img'\r\n                image={placeholder_img}\r\n                style={{\r\n                  borderTopLeftRadius: '1.5%',\r\n                  borderTopRightRadius: '1.5%',\r\n                  height: '100px',\r\n                }}\r\n              />\r\n              <Card>\r\n                <CardActionArea onClick={() => props.setEventCallback(event)}>\r\n                  <CardContent>\r\n                    <Typography align='left' gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {event.name}\r\n                    </Typography>\r\n                    <Typography align='left' variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {event.description}\r\n                    </Typography>\r\n                    <CardActions>\r\n                      {\r\n                        event.tags.map((tag: any, index: number) => (\r\n                          <CardTag key={index} tag={tag.name}/>\r\n                        ))\r\n                      }\r\n                    </CardActions>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n      <StyledButton variant=\"contained\" href=\"/schedule\" color=\"primary\">Check Full Schedule</StyledButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllEvents;","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Theme.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\EventInformation.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\ScheduleTab.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\InfoTab.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\SeeFullScheduleButton.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\BlockCollection.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\TracksTab.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\PrizesTab.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\Footer.tsx",["123","124","125","126","127"],"import '../App.css';\r\nimport React from 'react';\r\n\r\nimport Instagram from '../assets/social/insta.svg'\r\nimport Facebook from '../assets/social/facebook.svg'\r\nimport Twitter from '../assets/social/twitter.svg'\r\nimport GitHub from '../assets/social/github.svg'\r\nimport Web from '../assets/social/web.svg'\r\n\r\nconst Footer: React.FC = () => {\r\n\r\n  return (\r\n    <footer>\r\n      <div className=\"footer_container\">\r\n        <div className=\"footer_socials\">\r\n            <a href=\"https://www.instagram.com/thehexlabs/\" target=\"_blank\" className=\"footer_logo\">\r\n              <img src={Instagram} alt=\"Instagram logo\" />\r\n            </a>\r\n            <a href=\"https://www.facebook.com/TheHexLabs\" target=\"_blank\" className=\"footer_logo\">\r\n              <img src={Facebook} alt=\"Facebook logo\" />\r\n            </a>\r\n            <a href=\"https://www.twitter.com/TheHexLabs\" target=\"_blank\" className=\"footer_logo\">\r\n              <img src={Twitter} alt=\"Twitter logo\" />\r\n            </a>\r\n            <a href=\"https://www.github.com/HackGT\" target=\"_blank\" className=\"footer_logo\">\r\n              <img src={GitHub} alt=\"GitHub logo\" />\r\n            </a>\r\n            <a href=\"https://www.hexlabs.org\" target=\"_blank\" className=\"footer_logo\">\r\n              <img src={Web} alt=\"Web logo\" />\r\n            </a>\r\n        </div>\r\n        <div className=\"footer_text_hex\">\r\n          Made with ♡ by HexLabs\r\n        </div>\r\n        <div>\r\n          <a href=\"http://mlh.io/code-of-conduct\" className=\"footer_text_mlh\">\r\n            MLH Code of Conduct\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\MainStageInformation.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\YoutubeStage.tsx",["128"],"import '../App.css';\r\n\r\nimport YouTube from \"react-youtube\";\r\nimport MainStageInformation from './MainStageInformation'\r\nimport EventInformation from './EventInformation';\r\n\r\ntype Props = {\r\n  videoID: string;\r\n  event: EventInformation;\r\n};\r\n\r\nconst YoutubeStage: React.FC<Props> = (props: Props) => {\r\n\r\n  return (\r\n    <div className=\"main_stage_container\">\r\n      <div className=\"main_stage_wrapper_youtube\">\r\n        <YouTube\r\n          videoId={props.videoID}\r\n          opts={{ playerVars: { autoplay: 1, fs: 1, modestbranding: 1 } }}\r\n          className=\"youtubeStage\"\r\n        />\r\n        <iframe className=\"youtubechat\" height=\"100%\" src={\"https://www.youtube.com/live_chat?v=\" + props.videoID + \"&embed_domain=\" + window.location.hostname}></iframe>\r\n      </div>\r\n      <MainStageInformation event={props.event} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default YoutubeStage;\r\n","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\DailyStage.tsx",["129"],"import '../App.css';\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nimport DailyIframe from '@daily-co/daily-js';\r\nimport MainStageInformation from './MainStageInformation'\r\nimport EventInformation from './EventInformation';\r\n\r\ntype Props = {\r\n  videoID: string;\r\n  event: EventInformation;\r\n};\r\n\r\nconst DailyStage: React.FC<Props> = (props: Props) => {\r\n  let url = props.videoID.split(\"?t=\")[0]\r\n  let token = props.videoID.split(\"?t=\")[1]\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n\r\n  async function createCallFrameAndJoinCall() {\r\n    if (containerRef.current !== null) {\r\n      const divElement = containerRef.current;\r\n      if (divElement !== null) {\r\n        const callFrame = DailyIframe.createFrame(divElement, {\r\n          showLeaveButton: true,\r\n          showFullscreenButton: true,\r\n          theme: {\r\n            colors: {\r\n              accent: '#286DA8',\r\n              accentText: '#FFFFFF',\r\n              background: '#FFFFFF',\r\n              backgroundAccent: '#FBFCFD',\r\n              baseText: '#000000',\r\n              border: '#EBEFF4',\r\n              mainAreaBg: '#000000',\r\n              mainAreaBgAccent: '#333333',\r\n              mainAreaText: '#FFFFFF',\r\n              supportiveText: '#808080',\r\n            }\r\n          }\r\n        });\r\n        await callFrame.join({\r\n          url: url,\r\n          token: token\r\n        });\r\n        callFrame.on('left-meeting', (_) => {\r\n          if (containerRef != null) {\r\n            if (containerRef.current != null) {\r\n              containerRef.current.innerHTML = \"\";\r\n            }\r\n          }\r\n          createCallFrameAndJoinCall()\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (containerRef != null) {\r\n      if (containerRef.current != null) {\r\n        containerRef.current.innerHTML = \"\";\r\n      }\r\n    }\r\n    createCallFrameAndJoinCall()\r\n  }, [props.videoID]);\r\n\r\n  return (\r\n    <div className=\"main_stage_container\">\r\n      <div className=\"main_stage_wrapper\">\r\n        <div className=\"dailyStage\" ref={containerRef} />\r\n      </div>\r\n      <MainStageInformation event={props.event} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DailyStage;\r\n","C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\InvalidEventStage.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\VideoInformation.tsx",[],"C:\\Users\\langt\\HackGT\\virtual-checkin\\client\\src\\components\\HamburgerNavbar.tsx",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":102,"column":6,"nodeType":"136","endLine":102,"endColumn":8,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":37,"column":7,"nodeType":"136","endLine":37,"endColumn":9,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":91,"column":19,"nodeType":"142","endLine":91,"endColumn":53},{"ruleId":"134","severity":1,"message":"143","line":68,"column":6,"nodeType":"136","endLine":68,"endColumn":8,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":115,"column":27,"nodeType":"147","messageId":"148","endLine":115,"endColumn":38,"fix":"149"},{"ruleId":"140","severity":1,"message":"141","line":16,"column":13,"nodeType":"142","endLine":16,"endColumn":101},{"ruleId":"140","severity":1,"message":"141","line":19,"column":13,"nodeType":"142","endLine":19,"endColumn":99},{"ruleId":"140","severity":1,"message":"141","line":22,"column":13,"nodeType":"142","endLine":22,"endColumn":98},{"ruleId":"140","severity":1,"message":"141","line":25,"column":13,"nodeType":"142","endLine":25,"endColumn":93},{"ruleId":"140","severity":1,"message":"141","line":28,"column":13,"nodeType":"142","endLine":28,"endColumn":87},{"ruleId":"150","severity":1,"message":"151","line":22,"column":9,"nodeType":"142","endLine":22,"endColumn":162},{"ruleId":"134","severity":1,"message":"152","line":65,"column":6,"nodeType":"136","endLine":65,"endColumn":21,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateEvents'. Either include it or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has a missing dependency: 'props.tableLength'. Either include it or remove the dependency array. If 'setEvents' needs the current value of 'props.tableLength', you can also switch to useReducer instead of useState and read 'props.tableLength' in the reducer.",["157"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has missing dependencies: 'locationFilters.size' and 'tagFilters.size'. Either include them or remove the dependency array.",["158"],"@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","NewExpression","useLiteral",{"range":"159","text":"160"},"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has a missing dependency: 'createCallFrameAndJoinCall'. Either include it or remove the dependency array.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},[4248,4259],"[]",{"desc":"168","fix":"169"},"Update the dependencies array to be: [updateEvents]",{"range":"170","text":"171"},"Update the dependencies array to be: [props.tableLength]",{"range":"172","text":"173"},"Update the dependencies array to be: [locationFilters.size, tagFilters.size]",{"range":"174","text":"175"},"Update the dependencies array to be: [createCallFrameAndJoinCall, props.videoID]",{"range":"176","text":"177"},[3848,3850],"[updateEvents]",[1208,1210],"[props.tableLength]",[2404,2406],"[locationFilters.size, tagFilters.size]",[1870,1885],"[createCallFrameAndJoinCall, props.videoID]"]