schema {
      query: Query
      mutation: Mutation
}

# type Mutation {
#     modifyUser(input: UserInput!): User
# }

# scalar Date

type Mutation {
   modify_user(uuid: String!, points: Int!): User
   modify_user_event(uuid: String!, points: Int!, event_name: String!):User

}

type Query {
   user(uuid: String): User
   event(event_name: String): Event
   
}

type Event {
   name: String!
   starttime: String!,
   endtime: String!,
   points: Int!
   meetingId: Int!,
   passcode: Int!
}

type UserEvent {
   name: String!
   points: Int!
}

type User {
   id: ID!
   name: String!
   email:String!
   token:String!
   admin: Boolean!
   visible: Float!
   # email_verified: Boolean!
   # applied: Boolean!
   # accepted: Boolean!
   # accepted_and_notified: Boolean!
   # confirmed: Boolean!
   points: Int!
<<<<<<< HEAD
   events: [String!]
=======
   # events: [Event]
   # pointPerEvent: [Int]
   userevents: [UserEvent]!
>>>>>>> e3752bc5d52e70410daa16e94aab33f29cc129c9
}

type UserEvent {
   event: String!
   point: Int!
}

# input UserInput {
#    name: String!
#    points: Int!
# }
